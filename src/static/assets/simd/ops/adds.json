{
  "title": "Add",
  "description": [
    "Adds each element in `a` with each element in `b`, storing the results in `q` with saturation",
    "Saturation clamps values from [0:256) in case of overflow."],
  "intrinsics": [
    {
      "signature": "__m128i _mm_adds_epi16 (__m128i a, __m128i b)",
      "vectorLength": 128,
      "datatype": "i16",
      "tech": "sse2"
    },
    {
      "signature": "__m256i _mm256_adds_epi16 (__m256i a, __m256i b)",
      "vectorLength": 256,
      "datatype": "i16",
      "tech": "avx2"
    },
    {
      "signature": "__m128i _mm_adds_epi8 (__m128i a, __m128i b)",
      "vectorLength": 128,
      "datatype": "i8",
      "tech": "sse2"
    },
    {
      "signature": "__m256i _mm256_adds_epi8 (__m256i a, __m256i b)",
      "vectorLength": 256,
      "datatype": "i8",
      "tech": "avx2"
    },
    {
      "signature": "__m512i _mm512_adds_epi8 (__m512i a, __m512i b)",
      "vectorLength": 512,
      "datatype": "i8",
      "tech": "avx512bw"
    },
    {
      "signature": "__m128i _mm_adds_epu16 (__m128i a, __m128i b)",
      "vectorLength": 128,
      "datatype": "i16",
      "tech": "sse2"
    },
    {
      "signature": "__m256i _mm256_adds_epu16 (__m256i a, __m256i b)",
      "vectorLength": 256,
      "datatype": "i16",
      "tech": "avx2"
    },
    {
      "signature": "__m128i _mm_adds_epu8 (__m128i a, __m128i b)",
      "vectorLength": 128,
      "datatype": "i8",
      "tech": "sse2"
    },
    {
      "signature": "__m256i _mm256_adds_epu8 (__m256i a, __m256i b)",
      "vectorLength": 256,
      "datatype": "i8",
      "tech": "avx2"
    },
    {
      "signature": "__m512i _mm512_adds_epu8 (__m512i a, __m512i b)",
      "vectorLength": 512,
      "datatype": "i8",
      "tech": "avx512bw"
    }
  ]
}